name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    name: Test (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
            cache: pip

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install .[dev] build

      - name: Run tests
        run: pytest -q

      - name: Build dist
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-py${{ matrix.python-version }}
          path: dist/*

  publish:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # for trusted publishing (if enabled)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
      - name: Publish (PyPI API token)
        if: ${{ secrets.PYPI_API_TOKEN != '' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
      - name: Publish (Trusted Publishing)
        if: ${{ secrets.PYPI_API_TOKEN == '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
